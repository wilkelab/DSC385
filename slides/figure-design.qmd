---
title: "Figure design"
author: "Claus O. Wilke"
date: last-modified
format: 
  revealjs:
    theme:
      - default
      - Wilke-theme.scss
    auto-stretch: false
    chalkboard: true
execute:
  fig-format: svg
  fig-asp: 0.618
  fig-width: 5.5
---

```{r}
#| include: false
library(tidyverse)
library(cowplot)
library(ggthemes)
library(colorspace)
library(ggridges)
library(palmerpenguins)
library(here)

# ggplot2 settings so plots scale well for slide size 
theme_set(theme_gray(14))
update_geom_defaults("point", list(size = 2))
update_geom_defaults("line", list(linewidth = 1))

lincoln_temps <- readRDS(here("datasets", "lincoln_temps.rds"))
```

## {#how-do-we-go data-menu-title="How do we go from this"}

::: {.columns}

::: {.column width="50%"}
[How do we go from this]{.title-font}

```{r}
#| label: lincoln-ridgeline-raw
#| fig-cap: "&nbsp;"
#| out-width: "90%"
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges()
```
:::

::: {.fragment .column width="50%"}
[&nbsp;&nbsp;&nbsp;to this?]{.title-font}

```{r}
#| label: lincoln-ridgeline-polished
#| fig-cap: "&nbsp;"
#| out-width: "90%"
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01,
    fill = "#7DCCFF",
    color = "white"
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(
    name = NULL,
    expand = expansion(add = c(0.2, 2.6))
  ) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(vjust = 0)
  )
```
:::

:::

::: {.fragment .move-up-1em}
Requires coordinated modification of multiple elements:
:::

::: {.incremental}
- geoms (via arguments to geoms)
- scales (via `scale_*()` functions)
- plot appearance (via themes)
:::

## The starting point, a rough draft

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression1
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges()
```
:::

::: {.fragment .smaller-font}
You can download the dataset using this code:
```r
lincoln_temps <- readRDS(url("https://wilkelab.org/DSC385/datasets/lincoln_temps.rds"))
```
:::

## Set `scale` and `bandwidth` to shape ridgelines

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression2
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4
  )
```
:::

## Set `rel_min_height` to cut ridgelines near zero

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression3
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01
  )
```
:::

## Use `scale_*()` functions to specify axis labels

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression4
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01,
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)"
  ) +
  scale_y_discrete(
    name = NULL  # NULL means no label
  )
```
:::

## Specify scale expansion

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression5
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(
    name = NULL,
    expand = expansion(add = c(0.2, 2.6))
  )
```
:::

## Set overall plot theme

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression6
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(
    name = NULL,
    expand = expansion(add = c(0.2, 2.6))
  ) +
  theme_minimal_grid()  # from cowplot
```
:::

## Align y axis labels to grid lines

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression7
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(
    name = NULL,
    expand = expansion(add = c(0.2, 2.6))
  ) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(vjust = 0)
  )
```
:::

## Change fill color from default gray to blue

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression8
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01,
    fill = "#7DCCFF"
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(
    name = NULL,
    expand = expansion(add = c(0.2, 2.6))
  ) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(vjust = 0)
  )
```
:::

## Draw lines in white instead of black

::: {.smaller-font}
```{r}
#| label: lincoln-ridgeline-progression9
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(lincoln_temps) +
  aes(x = mean_temp, y = month_long) +
  geom_density_ridges(
    scale = 3, bandwidth = 3.4,
    rel_min_height = 0.01,
    fill = "#7DCCFF",
    color = "white"
  ) +
  scale_x_continuous(
    name = "mean temperature (°F)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(
    name = NULL,
    expand = expansion(add = c(0.2, 2.6))
  ) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(vjust = 0)
  )
```
:::

<!-- Segment ends here -->

#

# Working with ggplot themes

---

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point()
  # default theme is theme_gray()
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes2
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_gray()
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes3
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_gray(14) # most themes take a font-size argument to scale text size
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes4
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_bw(14)
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes5
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_minimal(14)
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes6
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_classic(14)
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes7
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_half_open()  # from package cowplot
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes8
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_minimal_grid()  # from package cowplot
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes9
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_minimal_hgrid()  # from package cowplot
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes10
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 6
#| out-width: "60%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_minimal_vgrid()  # from package cowplot
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes11
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 4.944
#| fig.asp: 0.75
#| out-width: "50%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_economist(14)       # from package ggthemes
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes12
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 4.944
#| fig.asp: 0.75
#| out-width: "50%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_economist(14) + # from package ggthemes
  scale_color_economist() 
```
:::

## Using ready-made themes

::: {.small-font}
```{r}
#| label: penguins-complete-themes13
#| echo: true
#| fig-cap: "&nbsp;"
#| fig.width: 4.944
#| fig.asp: 0.75
#| out-width: "50%"
#| fig-show: hold
ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +
  geom_point() +
  theme_fivethirtyeight(14) + # from package ggthemes
  scale_color_fivethirtyeight()
```
:::

## Customizing theme elements

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements1
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid()
```
:::

## Customizing theme elements

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements2
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    # change overall font family
    # (requires font to be available)
    text = element_text(
      family = "Comic Sans MS"
    )
  )
```
:::

## Customizing theme elements

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements3
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    # change color of axis titles
    axis.title = element_text(
      color = "royalblue2"
    )
  )
```
:::

## Customizing theme elements

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements4
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    # change color of only the x axis title
    axis.title.x = element_text(
      color = "royalblue2"
    )
  )
```
:::

## Customizing theme elements

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements5
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    # change all text colors?
    # why does it not work?
    text = element_text(color = "royalblue2")
  )
```
:::

## Customizing theme elements

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements6
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    text = element_text(color = "royalblue2"),
    axis.text = element_text(
      color = "royalblue2"
    )
  )
```
:::

::: {.fragment}
The element `axis.text` has its own color set in the theme. Therefore it doesn't inherit from `text`.
:::


## Horizontal and vertical alignment

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements7
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    axis.title.x = element_text(
      # horizontal justification
      # (0 = left)
      hjust = 0
    )
  )
```
:::

## Horizontal and vertical alignment

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements8
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    axis.title.x = element_text(
      # horizontal justification
      # (0.5 = center)
      hjust = 0.5
    )
  )
```
:::

## Horizontal and vertical alignment

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements9
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    axis.title.x = element_text(
      # horizontal justification
      # (1 = right)
      hjust = 1
    )
  )
```
:::

## Horizontal and vertical alignment

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements10
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(
      # vertical justification
      # (0 = bottom)
      vjust = 0
    )
  )
```
:::

## Horizontal and vertical alignment

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements11
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(
      # vertical justification
      # (0.5 = center)
      vjust = 0.5
    )
  )
```
:::

## Horizontal and vertical alignment

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements12
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    axis.text.y = element_text(
      # vertical justification
      # (1 = top)
      vjust = 1
    )
  )
```
:::

## Remove elements entirely: `element_blank()`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements13
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    # all text gone
    text = element_blank()
  )
```
:::


## Remove elements entirely: `element_blank()`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements14
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    # no axis titles
    axis.title = element_blank()
  )
```
:::

## Set background color: `element_rect()`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements15
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    plot.background = element_rect(
      fill = "aliceblue"
    )
  )
```
:::

## Set background color: `element_rect()`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements16
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    panel.background = element_rect(
      fill = "aliceblue"
    )
  )
```
:::

## Set background color: `element_rect()`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements17
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    legend.box.background = element_rect(
      fill = "aliceblue",
      color = "steelblue4" # line color
    )
  )
```
:::

## Set background color: `element_rect()`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements18
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    legend.box.background = element_rect(
      fill = "aliceblue",
      color = "steelblue4" # line color
    ),
    legend.box.margin = margin(7, 7, 7, 7)
  )
```
:::

## Move the legend: `legend.position`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements19
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    legend.box.background = element_rect(
      fill = "aliceblue",
      color = "steelblue4" # line color
    ),
    legend.box.margin = margin(7, 7, 7, 7),
    # legend on top of plot
    legend.position = "top"
  )
```
:::


## Move the legend: `legend.position`

::: {.smaller-font}
```{r}
#| label: penguins-theme-elements20
#| echo: true
#| fig-cap: "&nbsp;"
#| out-width: "100%"
#| output-location: column
ggplot(penguins) +
  aes(flipper_length_mm, body_mass_g) +
  geom_point(aes(color = species)) +
  theme_minimal_grid() +
  theme(
    legend.box.background = element_rect(
      fill = "aliceblue",
      color = "steelblue4" # line color
    ),
    legend.box.margin = margin(7, 7, 7, 7),
    # legend inside plot
    legend.position = "inside", 
    # relative position inside plot panel
    legend.position.inside = c(0.98, 0.02),
    # justification relative to position
    legend.justification = c(1, 0)
  )
```
:::

<!-- Segment ends here -->

#

## Further reading

- Fundamentals of Data Visualization: [Chapter 23: Balance the data and the context](https://clauswilke.com/dataviz/balance-data-context.html)
- Data Visualization—A Practical Introduction: [Chapter 8.3: Change the appearance of plots with themes](https://socviz.co/refineplots.html#change-the-appearance-of-plots-with-themes)
- ggplot2 reference documentation: [Complete themes](https://ggplot2.tidyverse.org/reference/ggtheme.html)
- ggplot2 reference documentation: [Modify components of a theme](https://ggplot2.tidyverse.org/reference/theme.html)

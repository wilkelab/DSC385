---
title: "Visualizing Uncertainty"
author: "Claus O. Wilke"
date: last-modified
format: 
  revealjs:
    theme:
      - default
      - Wilke-theme.scss
    auto-stretch: false
    chalkboard: true
execute:
  fig-format: svg
  fig-asp: 0.618
  fig-width: 5.5
---

```{r}
#| include: false
library(tidyverse)
library(colorspace)
library(cowplot)
library(broom)
library(gapminder)
library(here)

# ggplot2 settings so plots scale well for slide size 
theme_set(theme_gray(14))
update_geom_defaults("point", list(size = 2))
update_geom_defaults("line", list(linewidth = 1))
```

## We all know how to visualize uncertainty, right?

::: {.move-down-1em}
![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/butterfat-bars-1.png){width="75%" fig-align="center"}
:::

::: {.absolute-bottom-right .tiny-font}
Milk butterfat contents by cattle breed. 
Source: Canadian Record of Performance for Purebred Dairy Cattle
:::

## We all know how to visualize uncertainty, right?

::: {.move-down-1em}
![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/median-age-income-1.png){width="65%" fig-align="center"}
:::

::: {.absolute-bottom-right .tiny-font}
Income versus age for 67 counties in Pennsylvania. 
Source: 2015 Five-Year American Community Survey
:::

## We all know how to visualize uncertainty, right?

::: {.move-down-1em}
![](../assets/visualizing-uncertainty/blue-jays-static.png){width="65%" fig-align="center"}
:::

::: {.absolute-bottom-right .tiny-font}
Head length versus body mass for male blue jays. Data source: Keith Tarvin, Oberlin College
:::

## These commonly used visualizations have problems


::: {.incremental}
- It's often not clear what exactly the visualizations represent
- Even if we know, we can have difficulty interpreting what we see
:::

## It's often not clear what the visualizations represent

::: {.fragment}
In particular, error bars can represent many different quantities
:::

::: {.fragment}
![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/cocoa-data-vs-CI-1.png){width="80%" fig-align="center"}
:::

::: {.absolute-bottom-right .tiny-font}
Chocolate bar ratings. Source: Manhattan Chocolate Society
:::

## We can have difficulty interpreting what we see

::: {.incremental}
- People are not good at reasoning about probabilities
- People will substitute uncertainty with simpler concepts  
(Deterministic Construal Error)
- People will interpret intervals as hard boundaries
:::

::: {.absolute-bottom-right .tiny-font}
Lace Padilla, Matthew Kay, and Jessica Hullman (2022): [Uncertainty Visualization](
https://osf.io/preprints/psyarxiv/ebd6r)
:::

## Uncertainty shown as 95% CI error bars with caps

::: {.small}
Chocolate bars from four countries compared to bars from the US<br>&nbsp;
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-3.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Uncertainty shown as 95% CI error bars with caps

::: {.small}
Determinstic Construal Error:<br>Error bars are interpreted as min/max values
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-3.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Uncertainty shown as 95% CI error bars with caps

::: {.small}
Categorical thinking:<br>Areas outside and inside the error bars are categorically different
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-3.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Uncertainty shown as 95% CI error bars without caps

::: {.small}
You can remove caps to make the boundary visually less severe<br>&nbsp;
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-4.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Uncertainty shown as graded error bars

::: {.small}
You can show multiple confidence levels to de-emphasize existence of boundary
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-2.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Uncertainty shown as confidence strips

::: {.small}
You can use faded strips (but hard to read/interpret)<br>&nbsp;
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-5.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Uncertainty shown as distributions

::: {.small}
You can show actual distributions<br>
Popular in Bayesian inference, but still difficult to interpret
:::

![](../assets/visualizing-uncertainty/confidence-visualizations-6.png){width="75%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Relative rankings compared to US chocolate bars. Source: Manhattan Chocolate Society
:::

## Consider the actual experience of a customer

::: {.fragment}
If I can buy either a Canadian or a US bar, what is the probability that the Canadian bar will be better?
:::

::: {.fragment}
Answer: The Canadian bar has a 53% chance of being better
:::

::: {.fragment}
How can we communicate this?
:::

## Use frequency framing to communicate probabilities

```{r}
#| label: freq-waffle
#| fig-cap: "&nbsp;"
#| fig-width: 4.5
#| fig-asp: 1
#| out-width: "50%"
g <- expand.grid(x = 1:10, y = 1:10)

set.seed(84520)
data <- data.frame(ratio = c(0.99, 0.9, 0.7, 0.47, 0.3, 0.1)) |>
  mutate(
    out = purrr::map(
      ratio,
      ~g |> mutate(
        value = {
          n <- n()
          i <- round(n*.x)
          sample(c(rep("W", i), rep("L", n - i)), n)
        }
      )
    )
  ) |>
  unnest(cols = out) |>
  mutate(
    label = paste0(round(100*(1-ratio)), "% chance")
  )

data |> filter(ratio == .47) |>
  ggplot(aes(x, y, fill = value)) +
  geom_tile(color = "white", linewidth = 2) +
  coord_fixed(expand = FALSE, clip = "off") +
  scale_x_continuous(name = NULL, breaks = NULL) +
  scale_y_continuous(name = NULL, breaks = NULL) +
  scale_fill_manual(
    name = NULL,
    breaks = c("W", "L"),
    labels = c("loss   ", "win"),
    values = c(
      "L" = desaturate(darken("#0072B2", .4), .5),
      "W" = desaturate(lighten("#0072B2", .7), .5)
    ),
    guide = guide_legend(override.aes = list(size = 0))
  ) +
  facet_wrap(~label) +
  theme_minimal_grid(20) +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal",
    legend.justification = "right",
    legend.box.spacing = unit(12, "pt"),
    legend.spacing.x = unit(3, "pt"),
    legend.key.size = unit(18, "pt")
  )
```

## Use frequency framing to communicate probabilities

```{r}
#| label: freq-waffle2
#| fig-cap: "&nbsp;"
#| fig-width: 4.5
#| fig-asp: 1
#| out-width: "50%"
data |> filter(ratio == .1) |>
  ggplot(aes(x, y, fill = value)) +
  geom_tile(color = "white", linewidth = 2) +
  coord_fixed(expand = FALSE, clip = "off") +
  scale_x_continuous(name = NULL, breaks = NULL) +
  scale_y_continuous(name = NULL, breaks = NULL) +
  scale_fill_manual(
    name = NULL,
    breaks = c("W", "L"),
    labels = c("loss   ", "win"),
    values = c(
      "L" = desaturate(darken("#0072B2", .4), .5),
      "W" = desaturate(lighten("#0072B2", .7), .5)
    ),
    guide = guide_legend(override.aes = list(size = 0))
  ) +
  facet_wrap(~label) +
  theme_minimal_grid(20) +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal",
    legend.justification = "right",
    legend.box.spacing = unit(12, "pt"),
    legend.spacing.x = unit(3, "pt"),
    legend.key.size = unit(18, "pt")
  )
```

## Use frequency framing to communicate probabilities

```{r}
#| label: freq-waffle3
#| fig-cap: "&nbsp;"
#| fig-width: 4.5
#| fig-asp: 1
#| out-width: "50%"
data |> filter(ratio == .3) |>
  ggplot(aes(x, y, fill = value)) +
  geom_tile(color = "white", linewidth = 2) +
  coord_fixed(expand = FALSE, clip = "off") +
  scale_x_continuous(name = NULL, breaks = NULL) +
  scale_y_continuous(name = NULL, breaks = NULL) +
  scale_fill_manual(
    name = NULL,
    breaks = c("W", "L"),
    labels = c("loss   ", "win"),
    values = c(
      "L" = desaturate(darken("#0072B2", .4), .5),
      "W" = desaturate(lighten("#0072B2", .7), .5)
    ),
    guide = guide_legend(override.aes = list(size = 0))
  ) +
  facet_wrap(~label) +
  theme_minimal_grid(20) +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal",
    legend.justification = "right",
    legend.box.spacing = unit(12, "pt"),
    legend.spacing.x = unit(3, "pt"),
    legend.key.size = unit(18, "pt")
  )
```

## Use frequency framing to communicate probabilities

```{r}
#| label: freq-waffle4
#| fig-cap: "&nbsp;"
#| fig-width: 4.5
#| fig-asp: 1
#| out-width: "50%"
data |> filter(ratio == .7) |>
  ggplot(aes(x, y, fill = value)) +
  geom_tile(color = "white", linewidth = 2) +
  coord_fixed(expand = FALSE, clip = "off") +
  scale_x_continuous(name = NULL, breaks = NULL) +
  scale_y_continuous(name = NULL, breaks = NULL) +
  scale_fill_manual(
    name = NULL,
    breaks = c("W", "L"),
    labels = c("loss   ", "win"),
    values = c(
      "L" = desaturate(darken("#0072B2", .4), .5),
      "W" = desaturate(lighten("#0072B2", .7), .5)
    ),
    guide = guide_legend(override.aes = list(size = 0))
  ) +
  facet_wrap(~label) +
  theme_minimal_grid(20) +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal",
    legend.justification = "right",
    legend.box.spacing = unit(12, "pt"),
    legend.spacing.x = unit(3, "pt"),
    legend.key.size = unit(18, "pt")
  )
```

## Use frequency framing to communicate probabilities

```{r}
#| label: freq-waffle5
#| fig-cap: "&nbsp;"
#| fig-width: 4.5
#| fig-asp: 1
#| out-width: "50%"
data |> filter(ratio == .9) |>
  ggplot(aes(x, y, fill = value)) +
  geom_tile(color = "white", linewidth = 2) +
  coord_fixed(expand = FALSE, clip = "off") +
  scale_x_continuous(name = NULL, breaks = NULL) +
  scale_y_continuous(name = NULL, breaks = NULL) +
  scale_fill_manual(
    name = NULL,
    breaks = c("W", "L"),
    labels = c("loss   ", "win"),
    values = c(
      "L" = desaturate(darken("#0072B2", .4), .5),
      "W" = desaturate(lighten("#0072B2", .7), .5)
    ),
    guide = guide_legend(override.aes = list(size = 0))
  ) +
  facet_wrap(~label) +
  theme_minimal_grid(20) +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal",
    legend.justification = "right",
    legend.box.spacing = unit(12, "pt"),
    legend.spacing.x = unit(3, "pt"),
    legend.key.size = unit(18, "pt")
  )
```

## Alternatively: Use Hypothetical Outcome Plots

Hypothetical Outcome Plots use animation to let viewers experience uncertainty

::: {.absolute-bottom-right .tiny-font}
[Hullman et al., PLOS ONE 2015](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142444)
:::

## Alternatively: Use Hypothetical Outcome Plots

Hypothetical Outcome Plots use animation to let viewers experience uncertainty

![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/chocolate-HOP-animated-1.gif){width="60%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
[Hullman et al., PLOS ONE 2015](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142444)
:::

<!-- Segment ends here -->

#

# Uncertainty of trend lines

## Let's now consider the uncertainty of trend lines

::: {.fragment}
What does the confidence band show?

![](../assets/visualizing-uncertainty/blue-jays-static.png){width="65%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Head length versus body mass for male blue jays. Data source: Keith Tarvin, Oberlin College
:::
:::

## Let's now consider the uncertainty of trend lines

Both the intercept and the slope have uncertainty

![](../assets/visualizing-uncertainty/blue-jays-HOP.gif){width="65%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Head length versus body mass for male blue jays. Data source: Keith Tarvin, Oberlin College
:::

## It gets even more confusing for non-linear trend lines

Individual sample fits tend to be more wiggly than the mean

![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/mpg-uncertain-1.png){width="95%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Fuel efficiency versus displacement, for 32 cars (1973–74 models). Source: Motor Trend, 1974
:::

## Hypothetical Outcome Plots again help develop intuition

![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/mpg-uncertain-HOP-animated-1.gif){width="65%" fig-align="center"}

::: {.absolute-bottom-right .tiny-font}
Fuel efficiency versus displacement, for 32 cars (1973–74 models). Source: Motor Trend, 1974
:::

<!-- Segment ends here -->

#

# Uncertainty visualizations in R

## Making a plot with error bars

::: {.fragment .small-font}
Example: Relationship between life expectancy and GDP per capita

```{r}
#| label: gapminder-regressions
#| fig-cap: "&nbsp;"
#| fig-width: 7
#| fig-asp: 0.65
#| out-width: "75%"
gapminder |>
  filter(
    continent != "Oceania",
    year %in% c(1952, 1967, 1982, 1997)
  ) |>
  mutate(
    continent = fct_relevel(continent,  "Americas", "Europe", "Asia",  "Africa")
  ) |>
  ggplot(aes(log(gdpPercap), lifeExp)) +
  geom_point(size = 0.5, color = "#0072B2") +
  geom_smooth(method = "lm", color = "black") +
  xlab("log GDP per capita") +
  scale_y_continuous(
    name = "life expectancy",
    breaks = c(40, 60, 80)
  ) +
  facet_grid(year ~ continent) +
  theme_minimal_grid(14, rel_small = 1) +
  panel_border(color = "black")
```
:::

## Making a plot with error bars

::: {.small-font}
Example: Relationship between life expectancy and GDP per capita
:::

:::: {.columns}

::: {.column width="50%"}
```{r}
#| label: gapminder-regressions2
#| fig-cap: "&nbsp;"
#| fig-width: 7
#| fig-asp: 0.65
#| out-width: "100%"
gapminder |>
  filter(
    continent != "Oceania",
    year %in% c(1952, 1967, 1982, 1997)
  ) |>
  mutate(
    continent = fct_relevel(continent,  "Americas", "Europe", "Asia",  "Africa")
  ) |>
  ggplot(aes(log(gdpPercap), lifeExp)) +
  geom_point(size = 0.5, color = "#0072B2") +
  geom_smooth(method = "lm", color = "black") +
  xlab("log GDP per capita") +
  scale_y_continuous(
    name = "life expectancy",
    breaks = c(40, 60, 80)
  ) +
  facet_grid(year ~ continent) +
  theme_minimal_grid(14, rel_small = 1) +
  panel_border(color = "black")
```
:::

::: {.column width="50%"}
```{r}
#| label: gapminder-summary
#| fig-cap: "&nbsp;"
#| fig-width: 7
#| fig-asp: 0.5
#| out-width: "100%"
gapminder |>
  nest(data = -c(continent, year)) |>
  mutate(
    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),
    tidy_out = map(fit, tidy)
  ) |>
  unnest(cols = tidy_out) |>
  filter(term != "(Intercept)", continent != "Oceania") |>
  mutate(
    continent = fct_relevel(continent, "Americas", "Europe", "Asia",  "Africa")
  ) |>
  ggplot() +
  aes(
    x = year, y = estimate,
    ymin = estimate - 1.96*std.error,
    ymax = estimate + 1.96*std.error,
    color = continent
  ) +
  geom_pointrange(
    position = position_dodge(width = 1)
  ) +
  scale_x_continuous(
    breaks = c(1952, 1962, 1972, 1982, 1992, 2002)
  ) + 
  scale_y_continuous(
    name = "regression slope"
  ) +
  scale_color_manual(
    values = c(Africa = "#009E73", Americas = "#0072B2", Asia = "#D55E00", Europe = "#F0E442")
  ) +
  theme_minimal_grid(16, rel_small = 1) +
  theme(legend.position = "top")
```
:::

::::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
lm_data <- gapminder |>
  nest(data = -c(continent, year))

lm_data
```
:::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
lm_data <- gapminder |>
  nest(data = -c(continent, year)) |>
  mutate(
    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x))
  )

lm_data
```
:::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
lm_data <- gapminder |>
  nest(data = -c(continent, year)) |>
  mutate(
    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),
    tidy_out = map(fit, tidy)
  )

lm_data
```
:::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
lm_data <- gapminder |>
  nest(data = -c(continent, year)) |>
  mutate(
    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),
    tidy_out = map(fit, tidy)
  ) |>
  unnest(cols = tidy_out)

lm_data
```
:::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
lm_data <- gapminder |>
  nest(data = -c(continent, year)) |>
  mutate(
    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),
    tidy_out = map(fit, tidy)
  ) |>
  unnest(cols = tidy_out) |>
  select(-fit, -data)

lm_data
```
:::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
lm_data <- gapminder |>
  nest(data = -c(continent, year)) |>
  mutate(
    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),
    tidy_out = map(fit, tidy)
  ) |>
  unnest(cols = tidy_out) |>
  select(-fit, -data) |>
  filter(term != "(Intercept)", continent != "Oceania")

lm_data
```
:::

## Making a plot with error bars

::: {.tiny-font}
```{r}
#| echo: true
#| label: gapminder-model
#| fig-cap: "&nbsp;"
#| fig-width: 6
#| out-width: "100%"
#| output-location: column
ggplot(lm_data) +
  aes(
    x = year, y = estimate,
    ymin = estimate - 1.96*std.error,
    ymax = estimate + 1.96*std.error,
    color = continent
  ) +
  geom_pointrange(
    position = position_dodge(width = 1)
  ) +
  scale_x_continuous(
    breaks = unique(gapminder$year)
  ) + 
  theme(legend.position = "top")
```
:::

## Half-eyes, gradient intervals, etc

::: {.fragment .small-font}
The **ggdist** package provides many different visualizations of uncertainty
:::

::: {.fragment .tiny-font}
```{r}
#| echo: true
#| label: gapminder-halfeye
#| fig-cap: "&nbsp;"
#| fig-width: 6
#| out-width: "100%"
#| output-location: column
library(ggdist)
library(distributional) # for dist_normal()

lm_data |>
  filter(year == 1952) |>
  mutate(
    continent = 
      fct_reorder(continent, estimate) 
  ) |>
  ggplot(aes(x = estimate, y = continent)) +
  stat_dist_halfeye(
    aes(dist = dist_normal(
      mu = estimate, sigma = std.error
    )),
    point_size = 4
  )
```
:::

## Half-eyes, gradient intervals, etc

::: {.small-font}
The **ggdist** package provides many different visualizations of uncertainty
:::

::: {.tiny-font}
```{r}
#| echo: true
#| label: gapminder-gradinterval
#| fig-cap: "&nbsp;"
#| fig-width: 6
#| out-width: "100%"
#| output-location: column
library(ggdist)
library(distributional) # for dist_normal()

lm_data |>
  filter(year == 1952) |>
  mutate(
    continent = 
      fct_reorder(continent, estimate) 
  ) |>
  ggplot(aes(x = estimate, y = continent)) +
  stat_dist_gradientinterval(
    aes(dist = dist_normal(
      mu = estimate, sigma = std.error
    )),
    point_size = 4,
    fill = "skyblue"
  )
```
:::

## Half-eyes, gradient intervals, etc

::: {.small-font}
The **ggdist** package provides many different visualizations of uncertainty
:::

::: {.tiny-font}
```{r}
#| echo: true
#| label: gapminder-quantiledots
#| fig-cap: "&nbsp;"
#| fig-width: 6
#| out-width: "100%"
#| output-location: column
library(ggdist)
library(distributional) # for dist_normal()

lm_data |>
  filter(year == 1952) |>
  mutate(
    continent = 
      fct_reorder(continent, estimate) 
  ) |>
  ggplot(aes(x = estimate, y = continent)) +
  stat_dist_dotsinterval(
    aes(dist = dist_normal(
      mu = estimate, sigma = std.error
    )),
    point_size = 4,
    fill = "skyblue",
    quantiles = 20
  )
```
:::

## Half-eyes, gradient intervals, etc

::: {.small-font}
The **ggdist** package provides many different visualizations of uncertainty
:::

::: {.tiny-font}
```{r}
#| echo: true
#| label: gapminder-quantiledots2
#| fig-cap: "&nbsp;"
#| fig-width: 6
#| out-width: "100%"
#| output-location: column
library(ggdist)
library(distributional) # for dist_normal()

lm_data |>
  filter(year == 1952) |>
  mutate(
    continent = 
      fct_reorder(continent, estimate) 
  ) |>
  ggplot(aes(x = estimate, y = continent)) +
  stat_dist_dotsinterval(
    aes(dist = dist_normal(
      mu = estimate, sigma = std.error
    )),
    point_size = 4,
    fill = "skyblue",
    quantiles = 10
  )
```
:::

<!-- Segment ends here -->

#

## Further reading

- Fundamentals of Data Visualization: [Chapter 16: Visualizing uncertainty](https://clauswilke.com/dataviz/visualizing-uncertainty.html)
- Data Visualization—A Practical Introduction: [Chapter 6.6: Grouped analysis and list columns](https://socviz.co/modeling.html#grouped-analysis-and-list-columns)
- Data Visualization—A Practical Introduction: [Chapter 6.7: Plot marginal effects](https://socviz.co/modeling.html#plot-marginal-effects)
- **ggdist** reference documentation: https://mjskay.github.io/ggdist/index.html
- **ggdist** vignette: [Frequentist uncertainty visualization](https://mjskay.github.io/ggdist/articles/freq-uncertainty-vis.html)

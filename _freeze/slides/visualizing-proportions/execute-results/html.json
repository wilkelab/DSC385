{
  "hash": "0b8f55b16624fe32cac5d38457f96bac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing proportions\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n\n\n\n## The archetypal visualization of proportions: pie chart\n\n:::: {.fragment}\n::: {.move-down-1em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-pie-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n::: {.move-up-1em}\nParty composition of the 8th German Bundestag, 1976–1980\n:::\n::::\n\n## Pie chart vs stacked bars vs side-by-side bars\n\n::: {.move-down-3em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-various-1-1.svg){width=95%}\n:::\n:::\n\n\n\n:::\n\n## Pie chart vs stacked bars vs side-by-side bars\n\n::: {.move-down-3em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-various-2-1.svg){width=95%}\n:::\n:::\n\n\n\n:::\n\n## Pie chart vs stacked bars vs side-by-side bars\n\n::: {.move-down-3em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-various-3-1.svg){width=95%}\n:::\n:::\n\n\n\n:::\n\n## Example where side-by-side bars are preferred\n\n::: {.move-down-1em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/marketshare-side-by-side-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nInspired by: <https://en.wikipedia.org/wiki/File:Piecharts.svg>\n:::\n\n## Example where side-by-side bars are preferred\n\n::: {.move-down-1em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/marketshare-stacked-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nInspired by: <https://en.wikipedia.org/wiki/File:Piecharts.svg>\n:::\n\n## Example where side-by-side bars are preferred\n\n::: {.move-down-1em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/marketshare-pies-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nInspired by: <https://en.wikipedia.org/wiki/File:Piecharts.svg>\n:::\n\n## Example where side-by-side bars are preferred\n\n::: {.move-down-1em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/marketshare-side-by-side2-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nInspired by: <https://en.wikipedia.org/wiki/File:Piecharts.svg>\n:::\n\n## Example where stacked bars are preferred\n\n::: {.move-down-2em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/women-parliament-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n::: {.small-font .move-up-1em}\nChange in the gender composition of the Rwandan parliament from 1997 to 2016\n:::\n\n## Pros and cons of different approaches\n\n::: {.tiny-font .center-text .move-down-3em}\n&nbsp; | &nbsp;&nbsp;&nbsp; Pie chart &nbsp;&nbsp;&nbsp; | Stacked bars |Side-by-side bars\n:---------------    | :-----: | :-----: | :-----:\nAllows easy comparison of relative proportions   | ✖ | ✖ | ✔ \n:::\n\n## Pros and cons of different approaches\n\n::: {.tiny-font .center-text .move-down-3em}\n&nbsp; | &nbsp;&nbsp;&nbsp; Pie chart &nbsp;&nbsp;&nbsp; | Stacked bars |Side-by-side bars\n:---------------    | :-----: | :-----: | :-----:\nAllows easy comparison of relative proportions   | ✖ | ✖ | ✔ \nShows data as proportions of a whole             | ✔ | ✔ | ✖\n:::\n\n## Pros and cons of different approaches\n\n::: {.tiny-font .center-text .move-down-3em}\n&nbsp; | &nbsp;&nbsp;&nbsp; Pie chart &nbsp;&nbsp;&nbsp; | Stacked bars |Side-by-side bars\n:---------------    | :-----: | :-----: | :-----:\nAllows easy comparison of relative proportions   | ✖ | ✖ | ✔ \nShows data as proportions of a whole             | ✔ | ✔ | ✖\nEmphasizes simple fractions (1/2, 1/3, ...) | ✔ | ✖ | ✖\n:::\n\n## Pros and cons of different approaches\n\n::: {.tiny-font .center-text .move-down-3em}\n&nbsp; | &nbsp;&nbsp;&nbsp; Pie chart &nbsp;&nbsp;&nbsp; | Stacked bars |Side-by-side bars\n:---------------    | :-----: | :-----: | :-----:\nAllows easy comparison of relative proportions   | ✖ | ✖ | ✔ \nShows data as proportions of a whole             | ✔ | ✔ | ✖\nEmphasizes simple fractions (1/2, 1/3, ...) | ✔ | ✖ | ✖\nVisually appealing for small datasets | ✔ | ✖ | ✔\n:::\n\n## Pros and cons of different approaches\n\n::: {.tiny-font .center-text .move-down-3em}\n&nbsp; | &nbsp;&nbsp;&nbsp; Pie chart &nbsp;&nbsp;&nbsp; | Stacked bars |Side-by-side bars\n:---------------    | :-----: | :-----: | :-----:\nAllows easy comparison of relative proportions   | ✖ | ✖ | ✔ \nShows data as proportions of a whole             | ✔ | ✔ | ✖\nEmphasizes simple fractions (1/2, 1/3, ...) | ✔ | ✖ | ✖\nVisually appealing for small datasets | ✔ | ✖ | ✔\nWorks well for a large number of subsets | ✖ | ✖ | ✔ \n:::\n\n## Pros and cons of different approaches\n\n::: {.tiny-font .center-text .move-down-3em}\n&nbsp; | &nbsp;&nbsp;&nbsp; Pie chart &nbsp;&nbsp;&nbsp; | Stacked bars |Side-by-side bars\n:---------------    | :-----: | :-----: | :-----:\nAllows easy comparison of relative proportions   | ✖ | ✖ | ✔ \nShows data as proportions of a whole             | ✔ | ✔ | ✖\nEmphasizes simple fractions (1/2, 1/3, ...) | ✔ | ✖ | ✖\nVisually appealing for small datasets | ✔ | ✖ | ✔\nWorks well for a large number of subsets | ✖ | ✖ | ✔ \nWorks well for time series and similar | ✖ | ✔ | ✖\n:::\n\n::: {.fragment .small-font .move-down-1em}\nNo one visualization fits all scenarios!\n:::\n\n<!-- Segment ends here -->\n\n#\n\n# Nested proportions: proportions of proportions\n\n## Mosaic plots subdivide data along two dimensions\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/bridges-mosaic-1.png){width=\"75%\" fig-align=\"center\"}\n\n::: {.absolute-bottom-right .tiny-font}\nDataset: Bridges in Pittsburgh by construction material and era of construction\n:::\n\n## Closely related to mosaic plot: Treemap\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/bridges-treemap-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.absolute-bottom-right .tiny-font}\nDataset: Bridges in Pittsburgh by construction material and era of construction\n:::\n\n## Treemaps work well for more complex cases\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/US-states-treemap-1.png){width=\"80%\" fig-align=\"center\"}\n\n::: {.absolute-bottom-right .tiny-font}\nDataset: Land surface area of US states\n:::\n\n## We can nest pie charts with clever coloring\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/bridges-nested-pie2-1.png){width=\"70%\" fig-align=\"center\"}\n\n::: {.absolute-bottom-right .tiny-font}\nDataset: Bridges in Pittsburgh by construction material and era of construction\n:::\n\n## Parallel sets can show many subdivisions at once\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/bridges-parallel-sets1-1.png){width=\"75%\" fig-align=\"center\"}\n\n::: {.absolute-bottom-right .tiny-font}\nDataset: Bridges in Pittsburgh by construction material and era of construction\n:::\n\n## Don't show nested proportions without nesting!\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/bridges-bars-bad-1.png){.absolute top=\"20%\" left=\"0%\" width=\"50%\"}\n\n![](https://clauswilke.com/dataviz/nested_proportions_files/figure-html/bridges-pie-wrong-1.png){.fragment .absolute top=\"20%\" right=\"0%\" width=\"50%\"}\n\n\n::: {.absolute-bottom-right .tiny-font}\nDataset: Bridges in Pittsburgh by construction material and era of construction\n:::\n\n<!-- Segment ends here -->\n\n#\n\n# Making pie charts with **ggplot2**\n\n## Making pie charts with **ggplot2**\n\n::: {.small-font .fragment .move-down-1em}\nWe have three options:\n:::\n\n::: {.small-font .fragment}\n- `geom_bar()`/`geom_col()` with poolar coordinates  \n  Pros: simple  \n  Cons: hard to customize\n:::\n\n::: {.small-font .fragment}\n- `geom_arc_bar()` with `stat_pie()`  \n  Pros: relatively simple, some customization  \n  Cons: requires **ggforce** & some more complex code\n:::\n\n::: {.small-font .fragment}\n- `geom_arc_bar()` with manual computation  \n  Pros: maximum flexibility for customization  \n  Cons: requires **ggforce** & much more complex code\n:::\n\n## Making pie charts with **ggplot2**: polar coords\n\n::: {.tiny-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# the data\nbundestag <- tibble(\n  party = c(\"CDU/CSU\", \"SPD\", \"FDP\"),\n  seats = c(243, 214, 39)\n)\n\nbundestag\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  party   seats\n  <chr>   <dbl>\n1 CDU/CSU   243\n2 SPD       214\n3 FDP        39\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: polar coords\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# the data\nbundestag <- tibble(\n  party = c(\"CDU/CSU\", \"SPD\", \"FDP\"),\n  seats = c(243, 214, 39)\n)\n\n# make bar chart\nggplot(bundestag) +\n  aes(seats, \"YY\", fill = party) + \n  geom_col()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-coord-polar1-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: polar coords\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# the data\nbundestag <- tibble(\n  party = c(\"CDU/CSU\", \"SPD\", \"FDP\"),\n  seats = c(243, 214, 39)\n)\n\n# make bar chart in polar coords\nggplot(bundestag) +\n  aes(seats, \"YY\", fill = party) + \n  geom_col() +\n  coord_polar()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-coord-polar2-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: polar coords\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# the data\nbundestag <- tibble(\n  party = c(\"CDU/CSU\", \"SPD\", \"FDP\"),\n  seats = c(243, 214, 39)\n)\n\n# make bar chart in polar coords\nggplot(bundestag) +\n  aes(seats, \"YY\", fill = party) + \n  geom_col() +\n  coord_polar() +\n  scale_x_continuous(\n    name = NULL, breaks = NULL\n  ) +\n  scale_y_discrete(\n    name = NULL, breaks = NULL\n  ) +\n  ggtitle(\"German Bundestag 1976-1980\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-coord-polar3-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n\n## Making pie charts with **ggplot2**: **ggforce** stat pie\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(bundestag) +\n  aes(\n    x0 = 0, y0 = 0, # position of pie center\n    r0 = 0, r = 1,  # inner and outer radius\n    amount = seats, # size of pie slices\n    fill = party\n  ) + \n  geom_arc_bar(stat = \"pie\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-stat-pie1-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** stat pie\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(bundestag) +\n  aes(\n    x0 = 0, y0 = 0, # position of pie center\n    r0 = 0, r = 1,  # inner and outer radius\n    amount = seats, # size of pie slices\n    fill = party\n  ) + \n  geom_arc_bar(stat = \"pie\") +\n  coord_fixed() # make pie perfectly circular\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-stat-pie2-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** stat pie\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(bundestag) +\n  aes(\n    x0 = 0, y0 = 0, # position of pie center\n    r0 = 0, r = 1,  # inner and outer radius\n    amount = seats, # size of pie slices\n    fill = party\n  ) + \n  geom_arc_bar(stat = \"pie\") +\n  coord_fixed(  # make pie perfectly circular\n    # adjust limits as needed\n    xlim = c(-1, 3), ylim = c(-1, 3)\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-stat-pie3-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** stat pie\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(bundestag) +\n  aes(\n    x0 = 1, y0 = 1, # position of pie center\n    r0 = 0, r = 1,  # inner and outer radius\n    amount = seats, # size of pie slices\n    fill = party\n  ) + \n  geom_arc_bar(stat = \"pie\") +\n  coord_fixed(  # make pie perfectly circular\n    # adjust limits as needed\n    xlim = c(-1, 3), ylim = c(-1, 3)\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-stat-pie4-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** stat pie\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(bundestag) +\n  aes(\n    x0 = 1, y0 = 1, # position of pie center\n    r0 = 1, r = 2,  # inner and outer radius\n    amount = seats, # size of pie slices\n    fill = party\n  ) + \n  geom_arc_bar(stat = \"pie\") +\n  coord_fixed(  # make pie perfectly circular\n    # adjust limits as needed\n    xlim = c(-1, 3), ylim = c(-1, 3)\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-stat-pie5-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prepare pie data\npie_data <- bundestag |>\n  arrange(seats)    # sort so pie slices end up sorted\n\npie_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  party   seats\n  <chr>   <dbl>\n1 FDP        39\n2 SPD       214\n3 CDU/CSU   243\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prepare pie data\npie_data <- bundestag |>\n  arrange(seats) |> # sort so pie slices end up sorted\n  mutate(\n    end_angle = 2*pi*cumsum(seats)/sum(seats)    # ending angle for each pie slice\n  )\n\npie_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  party   seats end_angle\n  <chr>   <dbl>     <dbl>\n1 FDP        39     0.494\n2 SPD       214     3.20 \n3 CDU/CSU   243     6.28 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prepare pie data\npie_data <- bundestag |>\n  arrange(seats) |> # sort so pie slices end up sorted\n  mutate(\n    end_angle = 2*pi*cumsum(seats)/sum(seats),   # ending angle for each pie slice\n    start_angle = lag(end_angle, default = 0)    # starting angle for each pie slice\n  )\n\npie_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  party   seats end_angle start_angle\n  <chr>   <dbl>     <dbl>       <dbl>\n1 FDP        39     0.494       0    \n2 SPD       214     3.20        0.494\n3 CDU/CSU   243     6.28        3.20 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prepare pie data\npie_data <- bundestag |>\n  arrange(seats) |> # sort so pie slices end up sorted\n  mutate(\n    end_angle = 2*pi*cumsum(seats)/sum(seats),   # ending angle for each pie slice\n    start_angle = lag(end_angle, default = 0),   # starting angle for each pie slice\n    mid_angle = 0.5*(start_angle + end_angle),   # middle of each pie slice, for text labels\n  )\n\npie_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  party   seats end_angle start_angle mid_angle\n  <chr>   <dbl>     <dbl>       <dbl>     <dbl>\n1 FDP        39     0.494       0         0.247\n2 SPD       214     3.20        0.494     1.85 \n3 CDU/CSU   243     6.28        3.20      4.74 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prepare pie data\npie_data <- bundestag |>\n  arrange(seats) |> # sort so pie slices end up sorted\n  mutate(\n    end_angle = 2*pi*cumsum(seats)/sum(seats),   # ending angle for each pie slice\n    start_angle = lag(end_angle, default = 0),   # starting angle for each pie slice\n    mid_angle = 0.5*(start_angle + end_angle),   # middle of each pie slice, for text labels\n    # horizontal and vertical justifications for outer labels\n    hjust = if_else(mid_angle > pi, 1, 0),\n    vjust = if_else(mid_angle < pi/2 | mid_angle > 3*pi/2, 0, 1)\n  )\n\npie_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 7\n  party   seats end_angle start_angle mid_angle hjust vjust\n  <chr>   <dbl>     <dbl>       <dbl>     <dbl> <dbl> <dbl>\n1 FDP        39     0.494       0         0.247     0     0\n2 SPD       214     3.20        0.494     1.85      0     1\n3 CDU/CSU   243     6.28        3.20      4.74      1     0\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar1-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.6 * sin(mid_angle),\n      y = 0.6 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar2-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.2 * sin(mid_angle),\n      y = 0.2 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar3-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.8 * sin(mid_angle),\n      y = 0.8 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar4-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.6 * sin(mid_angle),\n      y = 0.6 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar5-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.6 * sin(mid_angle),\n      y = 0.6 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  geom_text( # place party name outside the pie\n    aes(\n      x = 1.05 * sin(mid_angle),\n      y = 1.05 * cos(mid_angle),\n      label = party,\n      hjust = hjust, vjust = vjust\n    )\n  ) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar6-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.6 * sin(mid_angle),\n      y = 0.6 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  geom_text( # place party name outside the pie\n    aes(\n      x = 1.05 * sin(mid_angle),\n      y = 1.05 * cos(mid_angle),\n      label = party,\n      hjust = hjust, vjust = vjust\n    )\n  ) +\n  coord_fixed(\n    xlim = c(-1.8, 1.3)\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar7-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0.4, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.7 * sin(mid_angle),\n      y = 0.7 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  geom_text( # place party name outside the pie\n    aes(\n      x = 1.05 * sin(mid_angle),\n      y = 1.05 * cos(mid_angle),\n      label = party,\n      hjust = hjust, vjust = vjust\n    )\n  ) +\n  coord_fixed(\n    xlim = c(-1.8, 1.3)\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar8-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Making pie charts with **ggplot2**: **ggforce** manual\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(pie_data) +\n  aes(\n    x0 = 0, y0 = 0, r0 = 0.4, r = 1,\n    start = start_angle, end = end_angle,\n    fill = party\n  ) +\n  geom_arc_bar() +\n  geom_text( # place amounts inside the pie\n    aes(\n      x = 0.7 * sin(mid_angle),\n      y = 0.7 * cos(mid_angle),\n      label = seats\n    )\n  ) +\n  geom_text( # place party name outside the pie\n    aes(\n      x = 1.05 * sin(mid_angle),\n      y = 1.05 * cos(mid_angle),\n      label = party,\n      hjust = hjust, vjust = vjust\n    )\n  ) +\n  coord_fixed(\n    xlim = c(-1.8, 1.3), ylim = c(-1.0, 1.1)\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-proportions_files/figure-revealjs/bundestag-arc-bar9-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n<!-- Segment ends here -->\n\n#\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 10: Visualizing proportions](https://clauswilke.com/dataviz/visualizing-proportions.html)\n- Fundamentals of Data Visualization: [Chapter 11: Visualizing nested proportions](https://clauswilke.com/dataviz/nested-proportions.html)\n- **ggplot2** reference documentation: [`position_stack()`, `position_fill()`](https://ggplot2.tidyverse.org/reference/position_stack.html)\n- **ggplot2** reference documentation: [`position_dodge()`](https://ggplot2.tidyverse.org/reference/position_dodge.html)\n- **ggforce** reference documentation: [`geom_arc_bar()`](https://ggforce.data-imaginist.com/reference/geom_arc_bar.html)\n\n",
    "supporting": [
      "visualizing-proportions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
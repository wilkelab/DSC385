{
  "hash": "91f90c15ab1a2925deef59d21564c172",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Compound Figures\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n\n\n\n## Compound figures\n\n<br>\nTwo common scenarios:\n\n::: {.fragment}\n1\\. The same type of plot is replicated many times (small multiples)\n:::\n\n::: {.fragment}\n2\\. Several disparate plots are combined into one display\n:::\n\n## Small multiples (facets)\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/titanic-passenger-breakdown-1.png){width=\"55%\" fig-align=\"center\"}\n\n## Small multiples (facets)\n\n![](https://clauswilke.com/dataviz/balance_data_context_files/figure-html/titanic-survival-by-gender-class-bad-1.png){width=\"55%\" fig-align=\"center\"}\n\n::: {.small-font}\nAvoid bars or other elements that are floating in space\n:::\n\n## Small multiples (facets)\n\n![](https://clauswilke.com/dataviz/balance_data_context_files/figure-html/titanic-survival-by-gender-class-1.png){width=\"55%\" fig-align=\"center\"}\n\n# Small multiples work even for massive amounts of data\n\n## {#movie-ratings data-menu-title=\"Movie ratings\"}\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/movie-rankings-1.png){.absolute width=\"70%\" top=\"-5%\" left=\"15%\"}\n\n## y-axis ranges should be consistent among panels\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/BA-degrees-variable-y-lims-1.png){width=\"65%\" fig-align=\"center\"}\n\n\n## y-axis ranges should be consistent among panels\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/BA-degrees-fixed-y-lims-1.png){width=\"65%\" fig-align=\"center\"}\n\n## Combining disparate figures into one display\n\n<br>\n\n::: {.fragment}\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/BA-degrees-compound-1.png){width=\"85%\" fig-align=\"center\"}\n:::\n\n## Don't use overly large or otherwise prominent labels\n\n<br>\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/BA-degrees-compound-bad-1.png){width=\"85%\" fig-align=\"center\"}\n\n::: {.small-font}\nNote: Also don't use serif fonts (such as Times) for labels\n:::\n\n## Use a consistent color language among sub-plots\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/athletes-composite-inconsistent-1.png){width=\"60%\" fig-align=\"center\"}\n\n## Use a consistent color language among sub-plots\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/athletes-composite-good-1.png){width=\"60%\" fig-align=\"center\"}\n\n## Pay attention to sub-plot alignment\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/athletes-composite-misaligned-1.png){width=\"60%\" fig-align=\"center\"}\n\n## Pay attention to sub-plot alignment\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/athletes-composite-good-1.png){width=\"60%\" fig-align=\"center\"}\n\n## Combine plots of different types\n\n![](https://clauswilke.com/dataviz/telling_a_story_files/figure-html/athletes-composite-repetitive-1.png){width=\"60%\" fig-align=\"center\"}\n\n::: {.small-font}\nThis helps your readers to distinguish different parts of the analysis \n:::\n\n## Combine plots of different types\n\n![](https://clauswilke.com/dataviz/multi-panel_figures_files/figure-html/athletes-composite-good-1.png){width=\"60%\" fig-align=\"center\"}\n\n::: {.small-font}\nThis helps your readers to distinguish different parts of the analysis \n:::\n\n# Distinguish infographics from figures in article/book\n\n## Distinguish infographics from figures in article/book\n\n<br>\nThere are two distinct use cases:\n\n::: {.fragment}\n**Infographic:** Standalone, has title/subtitle/caption\n:::\n\n::: {.fragment}\n**Figure in article/book:** Caption contains title, not part of figure\n:::\n\n## {#corruption-development-infographic data-menu-title=\"Corruption and human development infographic\"}\n\n![](https://clauswilke.com/dataviz/figure_titles_captions_files/figure-html/corruption-development-infographic-1.png){.absolute width=\"75%\" top=\"0%\" left=\"7.5%\"}\n\n## {#corruption-development-figure data-menu-title=\"Corruption and human development figure\"}\n\n:::: {.columns}\n\n::: {.column .move-up-half-em width=\"65%\"}\n![](https://clauswilke.com/dataviz/figure_titles_captions_files/figure-html/corruption-development-1.png){width=\"100%\"}\n:::\n\n::: {.column .tiny-font width=\"35%\"}\nFigure 1. **Corruption and human development.** The most developed countries experience the least corruption. Inspired by a posting in [The Economist online (2011)](https://www.economist.com/graphic-detail/2011/12/02/corrosive-corruption). Data sources: Transparency International & UN Human Development Report.\n:::\n\n::: {.small-font}\nExample of figure in article or book\n:::\n\n::::\n\n\n<!-- Segment ends here -->\n\n#\n\n# Making compound plots in R\n\n## The **patchwork** package\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n# make first plot\np1 <- ggplot(mtcars) + \n  geom_point(aes(mpg, disp))\n\np1\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo1-1.svg){width=80%}\n:::\n:::\n\n\n\n:::\n\n## The **patchwork** package\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n# make first plot\np1 <- ggplot(mtcars) + \n  geom_point(aes(mpg, disp))\n\n# make second plot\np2 <- ggplot(mtcars) + \n  aes(gear, disp, group = gear) +\n  geom_boxplot()\n\np2\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo2-1.svg){width=80%}\n:::\n:::\n\n\n\n:::\n\n\n## The **patchwork** package\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n# make first plot\np1 <- ggplot(mtcars) + \n  geom_point(aes(mpg, disp))\n\n# make second plot\np2 <- ggplot(mtcars) + \n  aes(gear, disp, group = gear) +\n  geom_boxplot()\n\n# place plots side-by-side\np1 | p2\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo3-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## The **patchwork** package\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n# make first plot\np1 <- ggplot(mtcars) + \n  geom_point(aes(mpg, disp))\n\n# make second plot\np2 <- ggplot(mtcars) + \n  aes(gear, disp, group = gear) +\n  geom_boxplot()\n\n# place plots on top of one-another\np1 / p2\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo4-1.svg){width=50%}\n:::\n:::\n\n\n\n:::\n\n## The **patchwork** package\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# add a few more plots\np3 <- ggplot(mtcars) + \n  geom_smooth(aes(disp, qsec))\n\np4 <- ggplot(mtcars) + \n  geom_bar(aes(carb))\n\n# make complex arrangement\n(p1 | p2 | p3) / p4\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo5-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Plot annotations and themes\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n(p1 | p2 | p3) / p4 +\n   plot_annotation(\n     tag_levels = \"A\"\n   )\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo6-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.small=font}\nAutomatic labeling of plots\n:::\n\n## Plot annotations and themes\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n(p1 | p2 | p3) / p4 +\n   plot_annotation(\n     tag_levels = \"a\"\n   )\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo7-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.small=font}\nAutomatic labeling of plots\n:::\n\n## Plot annotations and themes\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n(p1 | p2 | p3) / p4 +\n  plot_annotation(\n   tag_levels = \"a\"\n  ) &\n  theme_minimal_grid()\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo8-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.small=font}\nApplying one theme to all plots\n:::\n\n## Plot annotations and themes\n\n::: {.tiny-font}\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n(p1 | p2 | p3) / p4 +\n  plot_annotation(\n   tag_levels = \"a\",\n   title = \"A plot about mtcars\",\n   subtitle = \"With subtitle...\",\n   caption = \"...and caption\"\n  ) &\n  theme_minimal_grid()\n```\n\n::: {.cell-output-display}\n![&nbsp;](compound-figures_files/figure-revealjs/patchwork-demo9-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.small=font}\nTitles and captions\n:::\n\n<!-- Segment ends here -->\n\n#\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 21: Multi-panel figures](https://clauswilke.com/dataviz/multi-panel-figures.html)\n- **patchwork** documentation: [Getting started](https://patchwork.data-imaginist.com/articles/patchwork.html)\n- **patchwork** documentation: [Plot assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html)\n- **patchwork** documentation: [Adding annotation and style](https://patchwork.data-imaginist.com/articles/guides/annotation.html)\n\n",
    "supporting": [
      "compound-figures_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}